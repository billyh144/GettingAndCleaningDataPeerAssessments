library(knitr)
purl("test.Rmd")
purl("test.Rmd",output="test2.R",documentation=2)
head(iris)
attach(iris)
sort(Sepal.Length)
head(iris)
sort1.iris <- iris[order(Sepal.Length) , ]
head(sort1.iris)
sort2.iris <- iris[order(Sepal.Length, Petal.Length) , ]
head(sort2.iris)
sort3.iris <- iris[order(Sepal.Length, -Petal.Length) , ]
head(sort3.iris)
set.seeds(9)
set.seed(9)
x=rnorm(10,5,1)
x
rank(x)
x[rank(x)]
?rank
?sort
library(XML)
fileURL <- "http://wwww.w3school.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "http://wwww.w3school.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
library(XML)
fileUrl <- "http://wwww.w3school.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "http://wwww.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode, "//name",xmlValue)
xpathSApply(rootNode, "//price",xmlValue)
mydoc <- xmlTreeParse(myUrl,useInternal=TRUE)
myUrl="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
mydoc <- xmlTreeParse(myUrl,useInternal=TRUE)
?xmlTreeParse
myUrl="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
mydoc <- xmlTreeParse(myUrl,useInternalNodes=TRUE)
myUrl="http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
mydoc <- xmlTreeParse(myUrl,useInternalNodes=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode2 <- xmlRoot(mydoc)
xmlName(rootNode2)
names(rootNode2)
rootNode2[[1]]
xpathSApply(rootNode2, "//zipcode",xmlValue)
xpathSApply(rootNode2, "//[zipcode==21224]",xmlValue)
xpathSApply(rootNode2, "//row[zipcode==21224]",xmlValue)
rootNode2[[1]]
xpathSApply(rootNode2, "//li[zipcode==21224]",xmlValue)
xpathSApply(rootNode2, "//li[zipcode='21224']",xmlValue)
xpathSApply(rootNode2, "//li[@zipcode='21224']",xmlValue)
xpathSApply(rootNode2, "//row[@zipcode='21224']",xmlValue)
xpathSApply(rootNode2, "//row[@_id='1322']",xmlValue)
rootNode[[1]]
fileUrl="http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
scores
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
teams
doc[[1]]
doc[1]
fileUrl="http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github","felixfan", "830226fyh")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github","felixfan", "c02e481e3a31e55b31940bf534a0a2b7d325987f")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "c02e481e3a31e55b31940bf534a0a2b7d325987f")
myapp <- oauth_app("github", "c02e481e3a31e55b31940bf534a0a2b7d325987f")
?oauth_app
myapp <- oauth_app("github", "felixfan","c02e481e3a31e55b31940bf534a0a2b7d325987f")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(XML)
fileUrl <- "http://wwww.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
?xmlTreeParse
fileUrl="http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
doc
doc[1,]
doc[[1]]
head(doc)
doc
library(jsonlite)
install.packages("jsonlite")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
names(jsonData$owner$login)
jsonData$owner$login
jsonData <- fromJSON("https://api.github.com/users/felixfan/repos")
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
jsonData$name
jsonData[jsonData$name=="FinCal"]
jsonData$name
jsonData[jsonData$name=="FinCal",]
jsonData[jsonData$name=="FinCal",c(created_at,updated_at)]
jsonData[jsonData$name=="FinCal",c("created_at","updated_at")]
jsonData[,c("name","created_at","updated_at")]
jsonData[jsonData$owner.login=="felixfan",c("name","created_at","updated_at")]
jsonData[,c("name","owner.id","created_at","updated_at")]
jsonData[,c("name","full_name","created_at","updated_at")]
jsonData$"owner.id"
jsonData$owner
?read.table
?read.csv
index=1:99
testindex <- sample(index, trunc(length(index)/mn))
testindex <- sample(index, trunc(length(index)/3))
testindex
length(testindex)
testindex <- sample(index, trunc(length(index)))
seeds=NULL
is.null(seeds)
?set.seed
?message
log(2)
log(1)
log(1.2)
log(1.3)
log(1.4)
devtools::source_gist(11049319)
newGitbook("test2")
install.packages("gitbook")
devtools::install_github("jbryer/gitbook")
installGitbook()
library(gitbook)
installGitbook()
source('~/.active-rstudio-document', echo=TRUE)
result[1:10,1:10]
result[1:10,1:5]
write.table(result,file="result.txt")
melted <- melt(result,(id.vars=c("activity_labels","subjects")))
library(reshape2)
melted <- melt(result,(id.vars=c("activity_labels","subjects")))
tidied <- dcast(melted, subjects + activity_labels ~ variable, mean)
tidied[1:5,1:5]
melted[1:5,1:5]
melted
melted <- melt(result,id.vars=c("activity_labels","subjects"),na.rm = TRUE)
tidied <- dcast(melted, subjects + activity_labels ~ variable, mean)
tidied[20:30,1:5]
train <- cbind(train_labels,train_subjects,train_data)
test <- cbind(test_labels,test_subjects,test_data)
all <- rbind(train,test)
features <- read.table("./UCI HAR Dataset/features.txt",header=FALSE)
columns <- features[(grepl("mean\\(\\)",features$V2) | grepl("std()",features$V2)),]
columns_num <- columns[,1]+2 # I have add three coluumns before the measurements
columns_num <- c(1,2,columns_num)
result <- all[,columns_num]
columns_name <- c("activity_labels","subjects",as.vector(columns[,2]))
names(result) <- columns_name
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt",header=FALSE,stringsAsFactors=FALSE)
renamer <- function(x, pattern, replace){
for (i in seq_along(pattern)){
x <- gsub(pattern[i], replace[i], x)
}
x
}
result$activity_labels=renamer(result$activity_labels,activity_labels[,1],activity_labels[,2])
result[1:5,1:5]
melted <- melt(result,id.vars=c("activity_labels","subjects"),na.rm = TRUE)
melted[1:5]
melted[1:5,]
tidied <- dcast(melted, subjects + activity_labels ~ variable, mean)
tidy_data <- dcast(melted, subjects + activity_labels ~ variable, mean)
tidy_data[1:5,1:5]
tidy_data[1:10,1:5]
?write.table
write.table(tidy_data,file="tidy_data.txt",quote=FALSE)
write.table(tidy_data,file="tidy_data.txt",quote=FALSE,row.names=FALSE)
columns_name
columns_name[2:68]
columns_name[3:68]
